{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Zaheem Data\\\\Projects\\\\Web\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nconst MeetupDetials = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://admin:admin123@cluster0.ssgvc.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://admin:admin123@cluster0.ssgvc.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetups = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetups._id.toString(),\n        title: selectedMeetups.title,\n        address: selectedMeetups.address,\n        image: selectedMeetups.image,\n        description: selectedMeetups.description\n      }\n    }\n  };\n}\nexport default MeetupDetials;","map":{"version":3,"sources":["D:/Zaheem Data/Projects/Web/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","MeetupDetials","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetups","findOne","console","log","id"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AASH,CAVD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AAClC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,6FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA0B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA1B,EAAmCC,OAAnC,EAAtB;AACDR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AACtBC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADN;AADc,KAAL,CAAlB;AAFJ,GAAP;AASH;AAGD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CAClB,6FADkB,CAArB;AAGC,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMe,eAAe,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAEhB,QAAQ,CAACwB,QAAD;AAAf,GAA1B,CAA9B;AAEHM,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACA,SAAO;AACLtB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACR6B,QAAAA,EAAE,EAAEJ,eAAe,CAACZ,GAAhB,CAAoBS,QAApB,EADI;AAERpB,QAAAA,KAAK,EAAEuB,eAAe,CAACvB,KAFf;AAGRC,QAAAA,OAAO,EAAEsB,eAAe,CAACtB,OAHjB;AAIRF,QAAAA,KAAK,EAAEwB,eAAe,CAACxB,KAJf;AAKRG,QAAAA,WAAW,EAAEqB,eAAe,CAACrB;AALrB;AADP;AADF,GAAP;AAWD;AACD,eAAeN,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nconst MeetupDetials = (props) => {\r\n    return (\r\n      <MeetupDetail\r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n      />\r\n    );\r\n\r\n}\r\nexport async function getStaticPaths() {\r\n     const client = await MongoClient.connect(\r\n       \"mongodb+srv://admin:admin123@cluster0.ssgvc.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n     );\r\n     const db = client.db();\r\n     const meetupsCollection = db.collection(\"meetups\");\r\n     const meetups = await meetupsCollection.find({},{_id:1}).toArray();\r\n    client.close();\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({\r\n                params: {\r\n                    meetupId: meetup._id.toString()\r\n                }\r\n            }))\r\n    }\r\n\r\n}\r\n\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;\r\n    const client = await MongoClient.connect(\r\n       \"mongodb+srv://admin:admin123@cluster0.ssgvc.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n     );\r\n     const db = client.db();\r\n     const meetupsCollection = db.collection(\"meetups\");\r\n     const selectedMeetups = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\r\n     \r\n  console.log(meetupId);\r\n  return {\r\n    props: {\r\n      meetupData: { \r\n          id: selectedMeetups._id.toString(),\r\n          title: selectedMeetups.title,\r\n          address: selectedMeetups.address,\r\n          image: selectedMeetups.image,\r\n          description: selectedMeetups.description,\r\n         },\r\n    },\r\n  };\r\n}\r\nexport default MeetupDetials;"]},"metadata":{},"sourceType":"module"}